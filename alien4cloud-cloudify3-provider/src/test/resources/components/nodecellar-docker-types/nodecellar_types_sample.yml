tosca_definitions_version: alien_dsl_1_3_0
template_name: nodecellar-docker-types
template_author: Fastconnect
template_version: 1.1.0-SNAPSHOT

description: >
  TOSCA simple profile with Nodecellar using Docker containers

imports:
  - tosca-normative-types:1.0.0-ALIEN12
  - docker-types:1.1.0

#repositories:
#  docker:
#    url: https://hub.docker.com/
#    type: http

node_types:
  alien.nodes.Application.Docker.Nodecellar:
    derived_from: tosca.nodes.Container.Application.DockerContainer
    properties:
      docker_run_cmd:
        type: string
        default: "cd /nodecellar && nodejs server.js"
      docker_options:
        type: alien.datatypes.docker.cli-args.Nodecellar
        required: false
      docker_env_vars:
        type: map
        description: Environment variables for the Docker container.
        entry_schema:
          type: string
        default:
          LOG_LEVEL:
    requirements:
      - mongo_db:
          capability: alien.capabilities.endpoint.Mongo
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
    capabilities:
      nodecellar_app:
        type: alien.capabilities.endpoint.docker.Nodecellar
    interfaces:
      Standard:
        create:
          inputs:
            ENV_MONGO_HOST: { get_property: [REQ_TARGET, mongo_db, ip_address] }
            ENV_MONGO_PORT: { get_property: [REQ_TARGET, mongo_db, port] }
            ENV_NODECELLAR_PORT: 3000
          implementation: dockerimage.sh
#            repository: docker
#            type: tosca.artifacts.Deployment.Image.Container.Docker

  alien.nodes.Application.Docker.Mongo:
    derived_from: tosca.nodes.Container.Application.DockerContainer
    capabilities:
      mongo_db:
        type: alien.capabilities.endpoint.docker.Mongo
    interfaces:
      Standard:
        create:
          implementation: dockerimage.sh
#            repository: docker
#            type: tosca.artifacts.Deployment.Image.Container.Docker

data_types:
  alien.datatypes.docker.cli-args.Nodecellar:
    properties:
      dns:
        type: string
        required:  false
      lxc-conf:
        type: string
        required: false

capability_types:
  alien.capabilities.endpoint.Mongo:
    derived_from: tosca.capabilities.Endpoint
  alien.capabilities.endpoint.docker.Mongo:
    derived_from: alien.capabilities.endpoint.Mongo
    description: >
      Capability to connect to a Docker-supported Mongo database through bridge networking.
    properties:
      docker_bridge_port_mapping:
        type: integer
        description: Port used to bridge to the container's endpoint.
        default: 0
      port:
        type: integer
        default: 27017
  alien.capabilities.endpoint.docker.Nodecellar:
    derived_from: alien.capabilities.endpoint.Docker
    properties:
      docker_bridge_port_mapping:
        type: integer
        description: Port used to bridge to the container's endpoint.
        default: 0
      port:
        type: integer
        default: 3000