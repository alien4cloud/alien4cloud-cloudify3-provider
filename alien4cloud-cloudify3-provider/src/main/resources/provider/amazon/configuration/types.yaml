tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: cloudify-amazon-types
  template_author: alien4cloud
  template_version: 2.0.0-SM3

imports:
  - tosca-normative-types:1.0.0-ALIEN20SM3
  - cloudify3-common-types:2.0.0-SM3

data_types:
  alien.data.aws.InstanceParameters:
    derived_from: tosca.datatypes.Root
    properties:
      key_name:
        type: string
        required: false
      security_groups:
        type: list
        required: false
        entry_schema:
          type: string
      security_group_ids:
        type: list
        required: false
        entry_schema:
          type: string
      placement:
        type: string
        required: false
        description: AWS Availability zone on which to create the instance.

  alien.cloudify.aws.AwsConfig:
      derived_from: tosca.datatypes.Root
      properties:
        aws_access_key_id:
          type: string
          required: false
          description: >
            AWS access key id of the aws account to bootstrap this instance.
            Note that the property is optional as it may be configured globally on the cloudify manager. If not configured on the cloudify manager this property is required.
        aws_secret_access_key:
          type: string
          required: false
          description: >
            AWS secret access key of the aws account to bootstrap this instance.
            Note that the property is optional as it may be configured globally on the cloudify manager. If not configured on the cloudify manager this property is required.
        ec2_region_name:
          type: string
          required: false
          description: >
            The AWS region on which to connect.
            Note that the property is optional as it may be configured globally on the cloudify manager.
            If not configured on the cloudify manager this property takes 'us-east-1' as a default value.

node_types:
  # configuration types
  alien.cloudify.aws.nodes.Image:
    abstract: true
    derived_from: tosca.nodes.Root
    description: AWS location configuration type that represents an amazon image (ami).
    properties:
      id:
        type: string
    capabilities:
      os:
        type: tosca.capabilities.OperatingSystem

  alien.cloudify.aws.nodes.InstanceType:
    abstract: true
    derived_from: tosca.nodes.Root
    description: AWS location configuration type that represents an amazon flavor.
    properties:
      id:
        type: string
    capabilities:
      host:
        type: tosca.capabilities.Container

  # Concrete types
  alien.cloudify.aws.nodes.Compute:
    derived_from: tosca.nodes.Compute
    tags:
      _a4c_c3_derived_from: cloudify.aws.nodes.Instance
      _a4c_c3_prop_map: >
        {"extra_parameters": "parameters"}
    properties:
      parameters:
        type: alien.data.aws.InstanceParameters
        required: false
      extra_parameters:
        type: map
        entry_schema:
          type: string
        required: false
        description: "key-value server configuration as described in http://boto.readthedocs.org/en/latest/ref/ec2.html#module-boto.ec2.instance"
      image_id:
        type: string
        default: ''
      instance_type:
        type: string
        default: ''
      agent_config:
        type: alien.datatypes.AgentConfig
        required: false
      aws_config:
        type: alien.cloudify.aws.AwsConfig
        required: false
    attributes:
      ip_address: { get_attribute: [SELF, ip] }
      public_ip_address: { get_attribute: [SELF, public_ip_address] }

  alien.cloudify.aws.nodes.WindowsCompute:
    derived_from: alien.cloudify.aws.nodes.Compute
    tags:
      _a4c_c3_derived_from: cloudify.aws.nodes.WindowsInstance
      _a4c_c3_prop_map: >
        {"user": "agent_config.user", "password": "agent_config.password", "port": "agent_config.port", "key_pair": null, "private_key_path": null}
    properties:
      user:
        type: string
        required: true
        description: The user to connect to the created VM in case the user/password has been created in the image.
      password:
        type: string
        required: false
        description: The password to connect to the created VM in case the user/password has been created in the image.
      port:
        type: integer
        required: true
        description: The port which will be used by the agent to connect to the machine.
        default: 5985
      key_pair:
        type: string
        required: false
        description: |
          The existing keypair's name on Amazon.
          The private key must be copied to the manager's machine to the path defined in private_key_path
      private_key_path:
        type: string
        required: false
        default: /root/.ssh/agent_key.pem
        description: |
          Path to the private key of the keypair defined in key_pair property on the manager's machine.
          Default is set to the agent private key path

  alien.nodes.aws.PublicNetwork:
    derived_from: alien.nodes.PublicNetwork
    tags:
      _a4c_c3_derived_from: cloudify.aws.nodes.ElasticIP
      _a4c_c3_floating_ip_prop_map: >
        {"cidr": null, "ip_version": null, "network_id": null, "gateway_ip": null, "network_name": null}

  alien.cloudify.aws.nodes.DeletableVolume:
    derived_from: tosca.nodes.BlockStorage
    description: >
      This represents a Block Storage (Volume) instance on AWS. Cloudify 4 can create this block and will delete it when the application is undeployed,
      even if the volume id is provided.
    properties:
      device:
        type: string
        required: true
        description: >
          The device name to be used for attachement. See amazon description for limitations here http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html#available-ec2-device-names.
      zone:
        type: string
        required: false
        description: >
          The AWS availability zone.
      aws_config:
        type: alien.cloudify.aws.AwsConfig
        required: false
    attributes:
      device: { get_attribute: [SELF, device] }
      zone: { get_attribute: [SELF, zone] }
    tags:
      _a4c_c3_derived_from: cloudify.aws.nodes.Volume
      _a4c_c3_prop_map: >
        {"size": {"path": "size", "unit": "GiB", "ceil": true}, "volume_id": "resource_id"}
      _a4c_resource_id_key: "resource_id"

  alien.cloudify.aws.nodes.Volume:
    derived_from: alien.cloudify.aws.nodes.DeletableVolume
    description: >
      This represents a Block Storage (Volume) instance on AWS. Cloudify 4 can create this block but will not delete it when the application is undeployed.
      In case the volume is created, it's id will be injected back into alien's deployment topology so next deployment reuse it.
    tags:
      _a4c_persistent_resources: >
        {"aws_resource_id": "volume_id", "zone": "zone"}
