#macro(nonNativeNodes $templates)
#foreach($template in $templates)
#nonNativeNode($template)
#end
#end

#macro(nonNativeNode $template)
  $template.id:
    type: $template.indexedToscaElement.elementId
    instances:
      deploy: 1
#set( $nodeProperties = $util.nonNative.getCloudifyAndSimpleProperties($template) )
#if($util.nonNative.mapHasEntries($nodeProperties))
    properties: ${util.natives.formatProperties(3, $nodeProperties, $deployment.propertyMappings, $template.nodeTemplate.type)}
#end## if($util.nonNative.mapHasEntries($nodeProperties))
#set( $nodeInterfaces = $util.nonNative.getNodeInterfaces($template) )
#if($util.nonNative.mapHasEntries($nodeInterfaces))
    interfaces:
#foreach($interfaceEntry in $nodeInterfaces.entrySet())
      $util.nonNative.tryToMapToCloudifyInterface($interfaceEntry.key):
#foreach($operationEntry in ${interfaceEntry.value.operations.entrySet()})
        $operationEntry.key:
          implementation: ${util.nonNative.getArtifactWrapperPath($template, $interfaceEntry.key, $operationEntry.key)}
#if(!$util.nonNative.isHostAgent($template, $operationEntry.value))
          executor: central_deployment_agent
#end
#end
#end
#end
#set( $relationshipTemplates = $util.nonNative.getSourceRelationships($template) )
#if($util.collectionHasElement($relationshipTemplates))
    relationships:
#foreach($relationship in $relationshipTemplates)
      - target: $relationship.relationshipTemplate.target
        type: $util.tryToMapToCloudifyType($relationship.indexedToscaElement.elementId)
#set( $relationshipInterfaces = $util.nonNative.getRelationshipInterfaces($relationship) )
#if($util.mapHasEntries($relationshipInterfaces))
#set( $relationshipSourceInterfaces = $util.nonNative.filterRelationshipSourceInterfaces($relationshipInterfaces) )
#if($util.mapHasEntries($relationshipSourceInterfaces))
        source_interfaces:
#foreach($interfaceEntry in $relationshipSourceInterfaces.entrySet())
          $util.nonNative.tryToMapToCloudifyRelationshipInterface($interfaceEntry.key):
#foreach($operationEntry in ${interfaceEntry.value.operations.entrySet()})
            $util.nonNative.tryToMapToCloudifyRelationshipSourceInterfaceOperation($operationEntry.key):
              implementation: ${util.nonNative.getArtifactWrapperPath($relationship, $interfaceEntry.key, $operationEntry.key)}
#if(!$util.nonNative.isHostAgent($template, $operationEntry.value))
              executor: central_deployment_agent
#end
#end
#end
#end
#set( $relationshipTargetInterfaces = $util.nonNative.filterRelationshipTargetInterfaces($relationshipInterfaces) )
#if($util.mapHasEntries($relationshipTargetInterfaces))
        target_interfaces:
#foreach($interfaceEntry in $relationshipTargetInterfaces.entrySet())
          $util.nonNative.tryToMapToCloudifyRelationshipInterface($interfaceEntry.key):
#foreach($operationEntry in ${interfaceEntry.value.operations.entrySet()})
            $util.nonNative.tryToMapToCloudifyRelationshipTargetInterfaceOperation($operationEntry.key):
              implementation: ${util.nonNative.getArtifactWrapperPath($relationship, $interfaceEntry.key, $operationEntry.key)}
#if(!$util.nonNative.isHostAgent($util.nonNative.getTargetNode($relationship),  $operationEntry.value))
              executor: central_deployment_agent
#end
#end
#end
#end
#end
#end
#end
#end