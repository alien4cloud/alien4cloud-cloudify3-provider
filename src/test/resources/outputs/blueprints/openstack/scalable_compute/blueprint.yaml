

tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - openstack-plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.1/plugin.yaml

node_types:
  alien.nodes.openstack.ScalableCompute:
    derived_from: cloudify.openstack.nodes.ScalableServer
    properties:
      _a4c_substitute_for:
        default: []
      _a4c_att_public_ip_address:
        default:
          function: get_attribute
          parameters:
            - SELF
            - public_ip_address
      _a4c_att_ip_address:
        default:
          function: get_attribute
          parameters:
            - SELF
            - ip
      _a4c_persistent_resources:
        default: {"volumes.BlockStorage.external_id":"volume_id","volumes.BlockStorage2.external_id":"volume_id"}

  tosca.nodes.SoftwareComponent:
    derived_from: cloudify.nodes.Root
  fastconnect.nodes.SoftwareTest4HSS:
    derived_from: cloudify.nodes.SoftwareComponent

relationships:
  fastconnect.relationships.Supp_to_volume:
    derived_from: cloudify.relationships.connected_to

node_templates:

  NonScaledCompute:
    type: alien.nodes.openstack.ScalableCompute
    properties: 
      floatingips: 
        - floatingip: 
            floating_network_name: net-pub
          resource_name: NetPub
          use_external_resource: false
          ip_version: 4
      _a4c_substitute_for: 
        - NetPub

    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
               interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
               CPUCollector: {}
               MemoryCollector: {}
               LoadAverageCollector: {}
               DiskUsageCollector:
                 config:
                   devices: x?vd[a-z]+[0-9]*$
               NetworkCollector: {}
  AnotherScaleCompute:
    type: alien.nodes.openstack.ScalableCompute
    properties: 
      floatingips: 
        - floatingip: 
            floating_network_name: net-pub
          resource_name: NetPub
          use_external_resource: false
          ip_version: 4
      _a4c_substitute_for: 
        - NetPub

    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
               interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
               CPUCollector: {}
               MemoryCollector: {}
               LoadAverageCollector: {}
               DiskUsageCollector:
                 config:
                   devices: x?vd[a-z]+[0-9]*$
               NetworkCollector: {}
  Compute:
    type: alien.nodes.openstack.ScalableCompute
    properties: 
      image: 02ddfcbb-9534-44d7-974d-5cfd36dfbcab
      flavor: 2
      cloudify_agent: 
        user: ubuntu
      volumes: 
        - resource_name: BlockStorage2
          deletable: false
          volume: 
            size: 1
          use_external_resource: false
        - resource_name: BlockStorage
          deletable: false
          volume: 
            size: 1
          use_external_resource: false
      _a4c_substitute_for: 
        - BlockStorage2
        - BlockStorage
        - NetPub
      floatingips: 
        - floatingip: 
            floating_network_name: net-pub
          resource_name: NetPub
          use_external_resource: false
          ip_version: 4

    instances:
      deploy: 2
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
               interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
               CPUCollector: {}
               MemoryCollector: {}
               LoadAverageCollector: {}
               DiskUsageCollector:
                 config:
                   devices: x?vd[a-z]+[0-9]*$
               NetworkCollector: {}

  _a4c_BlockStorage2:
    type: tosca.nodes.SoftwareComponent
    instances:
      deploy: 1
    relationships:
      - target: Compute
        type: cloudify.relationships.contained_in
  FileSystem:
    type: fastconnect.nodes.SoftwareTest4HSS
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        stop: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/stop/artifacts/support_hss_types/scripts/_a4c_stopSupp_hss.py
        start: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/start/artifacts/support_hss_types/scripts/_a4c_startSupp_hss.py
        delete: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/delete/artifacts/support_hss_types/scripts/_a4c_deleteSupp_hss.py
        create: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/create/artifacts/support_hss_types/scripts/_a4c_createSupp_hss.py
        configure: wrapper/FileSystem/tosca.interfaces.node.lifecycle.Standard/configure/artifacts/support_hss_types/scripts/_a4c_configureSupp_hss.py
    relationships:
      - target: _a4c_BlockStorage2
        type: fastconnect.relationships.Supp_to_volume
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: wrapper/FileSystem__a4c_BlockStorage2/supp_to_volumeBlockStorage2/artifacts/support_hss_types/scripts/relationships/_a4c_supp_to_volume.py
      - target: Compute
        type: cloudify.relationships.contained_in
      - target: _a4c_BlockStorage
        type: fastconnect.relationships.Supp_to_volume
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: wrapper/FileSystem__a4c_BlockStorage/supp_to_volumeBlockStorage/artifacts/support_hss_types/scripts/relationships/_a4c_supp_to_volume.py
  _a4c_BlockStorage:
    type: tosca.nodes.SoftwareComponent
    instances:
      deploy: 1
    relationships:
      - target: Compute
        type: cloudify.relationships.contained_in


plugins:
  custom_wf_plugin:
    executor: central_deployment_agent
    source: custom_wf_plugin

workflows:
  a4c_install: custom_wf_plugin.plugin.workflows.a4c_install
  a4c_uninstall: custom_wf_plugin.plugin.workflows.a4c_uninstall
  a4c_scale:
    mapping: custom_wf_plugin.plugin.workflows.a4c_scale
    parameters:
      node_id:
        description: Which node (not node instance) to scale
      delta:
        description: >
            How many nodes should be added/removed.
            A positive number denotes increase of instances.
            A negative number denotes decrease of instances.
        default: 1
      scale_compute:
        description: >
            If node is contained (transitively) within a compute node
            and this property is 'true', operate on compute node instead
            of 'node_id'
        default: true
  a4c_heal:
    mapping: custom_wf_plugin.plugin.workflows.a4c_heal
    parameters:
      node_instance_id:
        description: Which node instance has failed
      diagnose_value:
        description: Diagnosed reason of failure
        default: Not provided
